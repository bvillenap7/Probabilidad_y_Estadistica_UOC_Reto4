lines(density(dat_intubed_no), col = "black", lwd = 2)
legend('topright', legend = c('Intubado', 'Densidad Intubado',
'No Intubado', 'Densidad NO Intubado'),
fill = c(rgb(0.8, 0.1, 1, alpha = 0.7), 'blue', rgb(1, 0, 0, alpha = 0.3),
'black'), bg = rgb(1, 0, 0, alpha= 0.10),
inset = c(0.01, 0.01), cex = 0.7)
# Creamos nuestro histograma de freceuncias para comparar los datos.
hist(dat_intubed_yes, breaks = 50, xlim = c(0,115), ylim = c(0,150),
main = 'Freq Intubación por edad', xlab = 'Edad',
ylab = 'Frecuencia', col = rgb(0.8, 0.1, 1, alpha = 0.7),
xaxp = c(0,110,11))
hist(dat_intubed_no, breaks = 50, xlim = c(0,115), ylim = c(0,150),
add = TRUE, col = rgb(1, 0, 0, alpha = 0.3), xaxp = c(0,110,11))
grid(nx = NA, ny = NULL, lty = 2, col = "gray", lwd = 1)
legend("topright", legend = c("Intubado", "No Intubado"),
fill = c(rgb(0.8, 0.1, 1, alpha = 0.7),
rgb(1, 0, 0, alpha = 0.3)),
bg = rgb(1, 0, 0, alpha= 0.10), inset = c(0.01, 0.01), cex = 0.7)
cat('Cómo podemos observar en ambos histogramas, el número de pacientes que no
requirieron intubación es más elevado que los que si. Analizando los
pacientes que si requirieron intubación, podemos observar como los pacientes
con edades comprendidas entre 50 y 80 años son aquellos que más requirieron
ser intubados. Por lo que podemos afirmar que efectivamente, la edad es un
factor determinante en el riesgo de intubación.')
?legend
# Imprimimos resultados
print(resu_ageintu)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
?t.test()
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(confint(resu_ageintu))
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(confint(resu_ageintu))
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(as.numeric(resu_ageintu$tconf.int))
?t.test()
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(resu_ageintu$tconf.int)
?t.test()
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(as.numeric(resu_ageintu$tconf.int))
?t.test()
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(result$tconf.int)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE, conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
print(resu_ageintu$tconf.int)
?t.test()
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
?t.test()
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
Cat('Observamos que el valor de t es', resu_tab_cont$p.value)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
Cat('Observamos que el valor de t es', resu_tab_cont$t)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_tab_cont$t)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_tab_cont$p-value)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$p.value)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$t)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$t )
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$t-value )
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$t)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$statistic)
cat('Observamos que el valor de t es', resu_ageintu$statistic, y el intervalo de confianza es resu_ageintu$conf.int)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$statistic, y el intervalo de confianza es resu_ageintu$conf.int)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es', resu_ageintu$statistic, ', y el intervalo de confianza es', resu_ageintu$conf.int)
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es: ', resu_ageintu$statistic, ', el p-valor es: ', resu_ageintu$p.value,' y el intervalo de confianza es [', resu_ageintu$conf.int,']. Podemos observar que bajo un nivel de confianza del 95 % la diferencia de media de edad entre los pacientes que fueron intubados respecto a los que no es signifcativa, ya que el p-valor se haya fuera de nuestro intervalo de confianza, por lo que rechazaríamos la hipótesis nula de que la diferencia en las medias fuese igual a 0.
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es: ', resu_ageintu$statistic, ', el p-valor es: ', resu_ageintu$p.value,' y el intervalo de confianza es [', resu_ageintu$conf.int,']. Podemos observar que bajo un nivel de confianza del 95 % la diferencia de media de edad entre los pacientes que fueron intubados respecto a los que no es signifcativa, ya que el p-valor se haya fuera de nuestro intervalo de confianza, por lo que rechazaríamos la hipótesis nula de que la diferencia en las medias fuese igual a 0.')
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor de t es: ', resu_ageintu$statistic, ', el p-valor es: ', resu_ageintu$p.value,' y el intervalo de confianza es [', resu_ageintu$conf.int,']. Vemos que bajo un nivel de confianza del 95 % la diferencia de media de edad entre los pacientes que fueron intubados respecto a los que no es signifcativa, ya que el p-valor se haya fuera de nuestro intervalo de confianza, por lo que rechazaríamos la hipótesis nula de que la diferencia en las medias fuese igual a 0.')
cat('Observamos que el valor crítico de t es: ', resu_ageintu$statistic, ', el p-valor es: ', resu_ageintu$p.value,' y el intervalo de confianza es [', resu_ageintu$conf.int,'].El valor de t nos indica que la diferencia entre las medias es grande en comparación con la variabilidad dentro de las muestras, y a su vez, el p-valor se haya fuera de nuestro intervalo de confianza, por lo que rechazaríamos la hipótesis nula de que la diferencia en las medias fuese igual a 0.')
prop_1 <- dat$INTUBED == 'Yes'[dat$DIABETES == 'Yes' & dat$DIED == 'Yes']
prop_2 <- dat$INTUBED == 'Yes'[dat$DIABETES == 'No' & dat$DIED == 'Yes']
prop_1 <- dat$INTUBED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes' & dat$DIED == 'Yes']
prop_2 <- dat$INTUBED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No' & dat$DIED == 'Yes']
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$INTUBED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes' & dat$DIED == 'Yes']
prop_2 <- dat$INTUBED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No' & dat$DIED == 'Yes']
print(prop_1)
print(prop_2)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
print(prop_1)
print(prop_2)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
resu_prop <- prop.test(table(prop_1, prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
resu_prop <- prop.test(table(prop_1, prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
resu_prop <- prop.test(length(prop_1), length(prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
resu_prop <- prop.test(length(prop_1), length(prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
resu_prop <- prop.test(prop_1,prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
resu_prop <- prop.test((prop_1, prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
resu_prop <- prop.test(prop_1, prop_2, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
print()
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
resu_prop <- prop.test(table(prop_1, prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES]
print(prop_1)
print(prop_2)
#resu_prop <- prop.test(table(prop_1, prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes', dat$DIABETES]
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
print(prop_1)
resu_prop <- prop.test(length(prop_1), length(prop_2), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(length(prop_1), length(prop_1 == 'Yes'), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(length(prop_1 == 'Yes'), length(prop_2 == 'Yes'), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(c(sum(prop_1 == 'Yes'), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
prop1 <- dat$INTUBED == 'Yes'[dat$DIED]
prop2 <- dat$INTUBED == 'Yes'[dat$DIABETES]
print(table(prop1, prop2))
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
prop1 <- dat$INTUBED == 'Yes'[dat$DIED]
prop2 <- dat$INTUBED == 'Yes'[dat$DIABETES]
print(table(prop1, prop2))
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
#resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
#print(resu_prop)
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
prop1 <- dat$INTUBED == 'Yes'[dat$DIED]
prop2 <- dat$INTUBED == 'Yes'[dat$DIABETES]
print(prop1)
print(table(prop1, prop2))
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
#resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
#print(resu_prop)
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
prop1 <- dat$DIED[dat$INTUBED == 'Yes']
prop2 <- dat$DIABETES[dat$INTUBED == 'Yes']
print(prop1)
print(table(prop1, prop2))
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
#resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
#print(resu_prop)
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'Yes']
prop_2 <- dat$DIED[dat$INTUBED == 'Yes' & dat$DIABETES == 'No']
prop1 <- dat$DIED[dat$INTUBED == 'Yes']
prop2 <- dat$DIABETES[dat$INTUBED == 'Yes']
print(table(prop1, prop2))
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
#resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
#print(resu_prop)
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes']
prop_2 <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop1, prop2)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
#resu_prop <- prop.test(c(sum(prop_1 == 'Yes')), c(length(prop_1), alternative = 'two.sided', conf.level = 0.95, correct = FALSE))
#print(resu_prop)
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes']
prop_2 <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop1, prop2)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes']
prop_2 <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop1, prop2)
print(tab_cont_prop)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
cat('Observamos que el valor estadístico de X^2 es: ', resu_prop$statistic, ', el p-valor es: ', resu_prop$p.value,' y el intervalo de confianza es [', resu_prop$conf.int,']. El estadístico nos indica el valor que difieren las proporciones que hemos analizado de las proporciones esperadas bajo la hipótesis nula de igualdad de proporciones. El p-valor vemos que al ser menor que 0.05 (95 % de confianza) se encuentra en nuestra área de rechazo, por lo que es una evidencia en contra de la hipótesis nula de igualdad de proporciones. Respecto al intervalo de confianza, podemos observar que no incluye el 0, por lo que es otro dato más en contra de la hipótesis nula de igualdad de proporciones. Por último, podemos observar que prop1 y prop2  )
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_1 <- dat$DIED[dat$INTUBED == 'Yes']
prop_2 <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop1, prop2)
print(tab_cont_prop)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
cat('Observamos que el valor estadístico de X^2 es: ', resu_prop$statistic, ', el p-valor es: ', resu_prop$p.value,' y el intervalo de confianza es [', resu_prop$conf.int,']. El estadístico nos indica el valor que difieren las proporciones que hemos analizado de las proporciones esperadas bajo la hipótesis nula de igualdad de proporciones. El p-valor vemos que al ser menor que 0.05 (95 % de confianza) se encuentra en nuestra área de rechazo, por lo que es una evidencia en contra de la hipótesis nula de igualdad de proporciones. Respecto al intervalo de confianza, podemos observar que no incluye el 0, por lo que es otro dato más en contra de la hipótesis nula de igualdad de proporciones. Por último, podemos observar que prop1 y prop2  )')
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_died <- dat$DIED[dat$INTUBED == 'Yes']
prop_diabetes <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop_died, prop_diabetes)
print(tab_cont_prop)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
cat('Observamos que el valor estadístico de X^2 es: ', resu_prop$statistic, ', el p-valor es: ', resu_prop$p.value,' y el intervalo de confianza es [', resu_prop$conf.int,']. El estadístico nos indica el valor que difieren las proporciones que hemos analizado de las proporciones esperadas bajo la hipótesis nula de igualdad de proporciones. El p-valor vemos que al ser menor que 0.05 (95 % de confianza) se encuentra en nuestra área de rechazo, por lo que es una evidencia en contra de la hipótesis nula de igualdad de proporciones. Respecto al intervalo de confianza, podemos observar que no incluye el 0, por lo que es otro dato más en contra de la hipótesis nula de igualdad de proporciones. Por último, podemos observar que prop1 y prop2  )')
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_died <- dat$DIED[dat$INTUBED == 'Yes']
prop_diabetes <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop_died, prop_diabetes)
print(tab_cont_prop)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
cat('Observamos que el valor estadístico de X^2 es: ', resu_prop$statistic, ', el p-valor es: ', resu_prop$p.value,' y el intervalo de confianza es [', resu_prop$conf.int,']. El estadístico nos indica el valor que difieren las proporciones que hemos analizado de las proporciones esperadas bajo la hipótesis nula de igualdad de proporciones. El p-valor vemos que al ser menor que 0.05 (95 % de confianza) se encuentra en nuestra área de rechazo, por lo que es una evidencia en contra de la hipótesis nula de igualdad de proporciones. Respecto al intervalo de confianza, podemos observar que no incluye el 0, por lo que es otro dato más en contra de la hipótesis nula de igualdad de proporciones. Por último, podemos observar que prop1 y prop2 difieren entre ellas, confirmándonos que las proporciones de pacientes que fallecieron con diabetes de los que fallecieron sin tener diabetes son diferentes.)')
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_died <- dat$DIED[dat$INTUBED == 'Yes']
prop_diabetes <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop_died, prop_diabetes)
print(tab_cont_prop)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
cat('Observamos que el valor estadístico de X^2 es: ', resu_prop$statistic, ', el p-valor es: ', resu_prop$p.value,' y el intervalo de confianza es [', resu_prop$conf.int,']. El estadístico nos indica el valor que difieren las proporciones que hemos analizado de las proporciones esperadas bajo la hipótesis nula de igualdad de proporciones. El p-valor vemos que al ser menor que 0.05 (95 % de confianza) se encuentra en nuestra área de rechazo, por lo que es una evidencia en contra de la hipótesis nula de igualdad de proporciones. Respecto al intervalo de confianza, podemos observar que no incluye el 0, por lo que es otro dato más en contra de la hipótesis nula de igualdad de proporciones. Por último, podemos observar que prop1 y prop2 difieren entre ellas, confirmándonos que las proporciones de pacientes que fallecieron con diabetes de los que fallecieron sin tener diabetes son diferentes.')
knitr::opts_chunk$set(echo = TRUE,
results = TRUE,
message = FALSE,
warning = FALSE,
fig.align='center',
fig.height= 5,
fig.width=5,
cache = FALSE)
# Incluye codigo para leer BBDD
load("C:/Users/bvill/Documents/4. UOC/1º Probabilidad y Estadística/Reto 4/Entregable/BBDD_COVID2.RData")
# Creamos variable dat_age con todos los valores de la variable de
# interés 'AGE' que coinciden con personas hospitalizadas según la varibale de
# interés 'PATIENT_TYPE' de nuestra base de datos 'dat'.
dat_age <- dat$AGE[dat$PATIENT_TYPE=='Yes']
# Aplicamos función t.test() a la variable dat_age, con un nivel de confianza
# del 95%
resultado <- t.test(dat_age, alternative = 'two.sided', mu = 53, conf.level = 0.95)
print(resultado)
cat('No rechazaremos la hipótesis nula de igualdad, ya que con un nivel de
confianza del 95% la media de nuestra muestra (',mean(dat_age),') está dentro del intervalo de confianza [', resultado$conf.int[1], ', ', resultado$conf.int[2], ']')
# Nos piden contrastar: Hipótesis nula == 0.3 ; Hipótesis alternativa != 0.3
# Creamos variable dat_diabetes con todos los valores de la variable de
# interés 'DIABETES' == 'Yes' que coinciden con personas hospitalizadas.
dat_diabetes <- dat$DIABETES[dat$DIABETES== 'Yes' & dat$PATIENT_TYPE=='Yes']
# Vamos a realizar la prueba de Pearson x^2 usando la función prop.test() sin
# aplicarle la correción de corrección de Yates con un nivel de confianza del
# 95%
prop.test(length(dat_diabetes), length(dat$PATIENT_TYPE), p = 0.30,
alternative = 'two.sided', correct = FALSE)
# Ahora realizamos el mismo test con un nivel de confianza del 99%
prop.test(length(dat_diabetes), length(dat$PATIENT_TYPE), p = 0.30,
alternative = 'two.sided', conf.level=0.99, correct = FALSE)
# Teniendo en cuenta los resultados, no tenemos evidencia de que la
# proporción de diabéticos en la cohorte sea distinta a la teórica. Podemos
# aceptar la hipótesis nula ya que nos seguimos manteniendo dentro del área de
# confianza.
# Llevaría a cabo una prueba de hipótesis para la diferencia de proporciones. El contraste entre hipótesis sería bidireccional.
# La hipótesis nula sería: La proporción de pacientes con diabetes que necesitan 'INTUBED' es igual a la proporción de pacientes sin diabetes que también necesitan 'INTUBED'.
# La hipótesis alternativa sería: La proporción de pacientes con diabetes que necesitan 'INTUBED' no es igual a la proporción de pacientes sin diabetes que también necesitan 'INTUBED'
# Creamos la variable dat_diabetes_all con todos los valores de la variable de interés 'DIABETES'.
dat_diabetes_all <- dat$DIABETES
# Creamos la variable dat_intubed con todos los valores de la variable de interés 'INTUBED'.
dat_intubed <- dat$INTUBED
# Creamos la tabla de contingencias que nos solicitan y la imprimimos
tab_cont <- table(dat_diabetes_all, dat_intubed)
print(tab_cont)
# Llevamos a cabo el contraste de hipótesis
resu_tab_cont <- prop.test(tab_cont, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_tab_cont)
cat('Teninedo en cuenta que p-valor', resu_tab_cont$p.value, 'es < que 0.05 podemos afirmar que la hipótesis nula será rechazada, es decir: no hay igualdad de proporciones entre pacientes que necesitan ser entubados que sean diabéticos, con aquellos que necesitan ser entubados y que no son diabéticos. A su vez, podemos observar que prop 1 es mayor que prop 2, es decir, la proporción de pacientes que necesitan ser entubados es mayor para aquellos que sufren diabetes que para los que no.')
# Creamos variables con los datos de personas intubadas y personas que no
# en relación con la edad
dat_intubed_yes <- dat$AGE[dat$INTUBED== 'Yes']
dat_intubed_no <- dat$AGE[dat$INTUBED== 'No']
# Creamos nuestro histograma de densidad para comparar los datos.
hist(dat_intubed_yes, prob = TRUE, breaks = 50, xlim = c(0,115),
main = 'Densidad de Intubación por edad', xlab = 'Edad',
ylab = 'Densidad', col = rgb(0.8, 0.1, 1, alpha = 0.7),
xaxp = c(0,110,11))
grid(nx = NA, ny = NULL, lty = 2, col = "gray", lwd = 1)
#x <- seq(min(dat_intubed_yes), max(dat_intubed_yes), length = 40)
#f <- dnorm(x, mean = mean(dat_intubed_yes), sd = sd(dat_intubed_yes))
#lines(x, f, col = "red", lwd = 2)
lines(density(dat_intubed_yes), col = "blue", lwd = 1)
hist(dat_intubed_no, prob= TRUE, breaks = 50, xlim = c(0,115),
add = TRUE, col = rgb(1, 0, 0, alpha = 0.3), xaxp = c(0,110,11))
#x_2 <- seq(min(dat_intubed_no), max(dat_intubed_no), length = 40)
#f_2 <- dnorm(x, mean = mean(dat_intubed_no), sd = sd(dat_intubed_no))
#lines(x_2, f_2, col = "blue", lwd = 2)
lines(density(dat_intubed_no), col = "black", lwd = 2)
legend('topright', legend = c('Intubado', 'Densidad Intubado',
'No Intubado', 'Densidad NO Intubado'),
fill = c(rgb(0.8, 0.1, 1, alpha = 0.7), 'blue', rgb(1, 0, 0, alpha = 0.3),
'black'), bg = rgb(1, 0, 0, alpha= 0.10),
inset = c(0.01, 0.01), cex = 0.7)
# Creamos nuestro histograma de freceuncias para comparar los datos.
hist(dat_intubed_yes, breaks = 50, xlim = c(0,115), ylim = c(0,150),
main = 'Freq Intubación por edad', xlab = 'Edad',
ylab = 'Frecuencia', col = rgb(0.8, 0.1, 1, alpha = 0.7),
xaxp = c(0,110,11))
hist(dat_intubed_no, breaks = 50, xlim = c(0,115), ylim = c(0,150),
add = TRUE, col = rgb(1, 0, 0, alpha = 0.3), xaxp = c(0,110,11))
grid(nx = NA, ny = NULL, lty = 2, col = "gray", lwd = 1)
legend("topright", legend = c("Intubado", "No Intubado"),
fill = c(rgb(0.8, 0.1, 1, alpha = 0.7),
rgb(1, 0, 0, alpha = 0.3)),
bg = rgb(1, 0, 0, alpha= 0.10), inset = c(0.01, 0.01), cex = 0.7)
cat('Cómo podemos observar en ambos histogramas, el número de pacientes que no
requirieron intubación es más elevado que los que si. Analizando los
pacientes que si requirieron intubación, podemos observar como los pacientes
con edades comprendidas entre 50 y 80 años son aquellos que más requirieron
ser intubados. Por lo que podemos afirmar que efectivamente, la edad es un
factor determinante en el riesgo de intubación.')
# Lanzamos función t.test()  asumiendo varianzas iguales.
resu_ageintu <- t.test(dat_intubed_yes, dat_intubed_no, var.equal = TRUE,
conf.level = 0.95)
# Imprimimos resultados
print(resu_ageintu)
cat('Observamos que el valor crítico de t es: ', resu_ageintu$statistic, ', el p-valor es: ', resu_ageintu$p.value,' y el intervalo de confianza es [', resu_ageintu$conf.int,']. Vemos que bajo un nivel de confianza del 95 % la diferencia de media de edad entre los pacientes que fueron intubados respecto a los que no, es bastante signifcativa. El valor de t nos indica que la diferencia entre las medias es grande en comparación con la variabilidad dentro de las muestras, y a su vez, el p-valor se haya fuera de nuestro intervalo de confianza, por lo que rechazaríamos la hipótesis nula de que la diferencia en las medias fuese igual a 0.')
cat('Observamos que el valor crítico de t es: ', resu_ageintu$statistic, ', el p-valor es: ', resu_ageintu$p.value,' y el intervalo de confianza es [', resu_ageintu$conf.int,'].El valor de t nos indica que la diferencia entre las medias es grande en comparación con la variabilidad dentro de las muestras, y a su vez, el p-valor se haya fuera de nuestro intervalo de confianza, por lo que rechazaríamos la hipótesis nula de que la diferencia en las medias fuese igual a 0.')
# Definimos las dos proporciones que queremos estudiar y creamos tabla de contingencias.
prop_died <- dat$DIED[dat$INTUBED == 'Yes']
prop_diabetes <- dat$DIABETES[dat$INTUBED == 'Yes']
tab_cont_prop <- table(prop_died, prop_diabetes)
print(tab_cont_prop)
# Realizamos el contraste en cada proporcion de aquellos pacientes que si fallecieron
resu_prop <- prop.test(tab_cont_prop, alternative = 'two.sided', conf.level = 0.95, correct = FALSE)
print(resu_prop)
cat('Observamos que el valor estadístico de X^2 es: ', resu_prop$statistic, ', el p-valor es: ', resu_prop$p.value,' y el intervalo de confianza es [', resu_prop$conf.int,']. El estadístico nos indica el valor que difieren las proporciones que hemos analizado de las proporciones esperadas bajo la hipótesis nula de igualdad de proporciones. El p-valor vemos que al ser menor que 0.05 (95 % de confianza) se encuentra en nuestra área de rechazo, por lo que es una evidencia en contra de la hipótesis nula de igualdad de proporciones. Respecto al intervalo de confianza, podemos observar que no incluye el 0, por lo que es otro dato más en contra de la hipótesis nula de igualdad de proporciones. Por último, podemos observar que prop1 y prop2 difieren entre ellas, confirmándonos que las proporciones de pacientes que fallecieron con diabetes de los que fallecieron sin tener diabetes son diferentes.')
# Creamos variable dat_age con todos los valores de la variable de
# interés 'AGE' que coinciden con personas hospitalizadas según la varibale de
# interés 'PATIENT_TYPE' de nuestra base de datos 'dat'.
dat_age <- dat$AGE[dat$PATIENT_TYPE=='Yes']
# Aplicamos función t.test() a la variable dat_age, con un nivel de confianza
# del 95%
resultado <- t.test(dat_age, alternative = 'two.sided', mu = 53, conf.level = 0.95)
print(resultado)
cat('No rechazaremos la hipótesis nula de igualdad, ya que con un nivel de
confianza del 95% la media de nuestra muestra (',mean(dat_age),') está dentro del intervalo de confianza: ' resultado$conf.int)
# Creamos variable dat_age con todos los valores de la variable de
# interés 'AGE' que coinciden con personas hospitalizadas según la varibale de
# interés 'PATIENT_TYPE' de nuestra base de datos 'dat'.
dat_age <- dat$AGE[dat$PATIENT_TYPE=='Yes']
# Aplicamos función t.test() a la variable dat_age, con un nivel de confianza
# del 95%
resultado <- t.test(dat_age, alternative = 'two.sided', mu = 53, conf.level = 0.95)
print(resultado)
cat('No rechazaremos la hipótesis nula de igualdad, ya que con un nivel de
confianza del 95% la media de nuestra muestra (',mean(dat_age),') está dentro del intervalo de confianza: ', resultado$conf.int)
# Escribimos respuesta fuera del chunk
# Nos piden contrastar: Hipótesis nula == 0.3 ; Hipótesis alternativa != 0.3
# Creamos variable dat_diabetes con todos los valores de la variable de
# interés 'DIABETES' == 'Yes' que coinciden con personas hospitalizadas.
dat_diabetes <- dat$DIABETES[dat$DIABETES== 'Yes' & dat$PATIENT_TYPE=='Yes']
# Vamos a realizar la prueba de Pearson # x^2 usando la función prop.test(),
# sin aplicarle la corrección de Yates, # con un nivel de confianza del 95%
prop.test(length(dat_diabetes), length(dat$PATIENT_TYPE), p = 0.30,
alternative = 'two.sided', correct = FALSE)
# Ahora realizamos el mismo test con un nivel de confianza del 99%
prop.test(length(dat_diabetes), length(dat$PATIENT_TYPE), p = 0.30,
alternative = 'two.sided', conf.level=0.99, correct = FALSE)
# Teniendo en cuenta los resultados, no tenemos evidencia de que la
# proporción de diabéticos en la cohorte sea distinta a la teórica. Podemos
# aceptar la hipótesis nula ya que nos seguimos manteniendo dentro del área de
# confianza.
